%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 《控制之美-卷一(第二版)》 代码
%% 作者：王天威
%% 清华大学出版社
%% 程序名称：7-4_PI_Control_Weight_Loss.m
%% 程序功能：比例积分控制_体重模型
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 程序初始化，清空工作空间，缓存，
clear all;
close all;
clc;
% 读取Octave控制和信号数据库（注：如使用Matlab，可删除或注释掉本行代码）
pkg load control
%%%%%%%%%%%%%%%%%系统定义%%%%%%%%%%%%%%%%%%%%%
%% 定义系统变量
S = 5;
h = 175;
a = 20;
alpha = 1.3;
%% 定义初始体重
x0 = [90];
%% 定义参考目标
r = 65;
%% 建立传递函数
G_s = tf([1],[7000,10*alpha]);
%% 定义扰动量
d = -alpha*(6.25*h-5*a+S);
%% 定义PI控制器
%% 读者可以自己调节kp 与 ki
kp = 0;
ki = 1;
C_s = pid(kp,ki);
%% 建立闭环系统
%% 参考值到输出的闭环传递函数
G_cl_r = G_s*C_s/(1+G_s*C_s);
%% 扰动到输出的闭环传递函数
G_cl_d = G_s/(1+G_s*C_s);
t = 0:1:3000;
%% 仿真结果，三个输出
%% 结果为三部分的叠加
x = r*step(G_cl_r,t) + d*step(G_cl_d,t) + 7000*x0*impulse(G_cl_d,t);
%% 定义误差
e = r - x;
%% 计算系统控制量
u = lsim(C_s,e,t);
%% 绘图
figure(1, 'position',[200 100 600 300]);
plot (t,x);
grid on;
figure(2, 'position',[200 100 600 300]);
plot (t,u);
grid on;
